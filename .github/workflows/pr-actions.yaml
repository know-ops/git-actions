name: pr / testing / actions

on: 
  pull_request:
    branches:
    - master
    paths:
    - 'action.yaml'
    - 'Dockerfile'
    - 'entrypoint.sh'
    - 'actions/*.sh'
    - 'lib/*.bash'
    - 'lib/**/*.bash'
    - '.github/workflows/pr-actions.yaml'

jobs:
  files_changed:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Source
      id: checkout
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    
    - name: Files Changed
      id: files-changed
      uses: ./
      with:
        git_action: files_changed
        git_created: "true"
        git_modified: "true"
        git_deleted: "true"

    - name: File to Action
      id: f2a
      if: steps.files-changed.outputs.files
      run: |
        file2Action() {
          echo $1 | tr ' ' '\n' \
          | awk '/actions\/.*\.sh/ { print }' \
          | sed -e 's/.*actions\/\(.*\).sh/\1/g' \
          | tr '\n' ' '
        }

        export KO_ALL=$(file2Action "${ko_files}")

        export KO_NEW=""
        if [ -n "${ko_created}" ]; then
          export NEW=$(file2Action "${ko_created}")
        fi

        export KO_UPDATED=""
        if [ -n "${ko_updated}" ]; then
          export UPDATED=$(file2Action "${ko_modified}")
        fi

        export KO_REMOVED=""
        if [ -n "${ko_deleted}" ]; then
          export REMOVED=$(file2Action "${ko_deleted}")
        fi

        echo "::set-output name=actions::{ 'all': '${KO_ALL}", 'new': '${KO_NEW}', 'updated': '${KO_UPDATED}', 'removed': '${KO_REMOVED}' }"

      env:
        ko_files: ${{ steps.files-changed.outputs.files }}
        ko_created: ${{ steps.files-changed.outputs.created_files }}
        ko_modified: ${{ steps.files-changed.outputs.modified_files }}
        ko_deleted: ${{ steps.files-changed-outputs.deleted_files }}

    - name: Repositiory Dispatch
      id: repository-dispatch
      uses: know-ops/github-actions@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        github_action: repository_dispatch
        github_event_type: dependency_update_workflow
        github_client_payload: '{"repo": "${{ github.repository }}", "ref": "${{ github.ref }}", "actions": ${{ toJson(steps.f2a.outputs.actions) }} }'
